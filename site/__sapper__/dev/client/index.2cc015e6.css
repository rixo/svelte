nav.svelte-faku86{display:grid;grid-template-columns:2.5em 1fr 2.5em;border-bottom:1px solid rgba(255,255,255,0.1)}div.svelte-faku86{position:relative;padding:1em 0.5em;font-weight:300;font-size:var(--h6);color:white}a.svelte-faku86{display:block;padding:0.7em 0;text-align:center;opacity:0.75;color:white}a.svelte-faku86:hover{opacity:1}a.disabled.svelte-faku86,a.disabled.svelte-faku86:hover,a.disabled.svelte-faku86:active{color:white;opacity:0.3}span.svelte-faku86{white-space:nowrap;position:relative;top:0.3em}strong.svelte-faku86{opacity:0.7 }select.svelte-faku86{position:absolute;left:0;top:0;width:100%;height:100%;opacity:0.0001;cursor:pointer;-webkit-appearance:none}
.tutorial-outer.svelte-163pr1f{position:relative;height:calc(100vh - var(--nav-h));overflow:hidden;padding:0 0 42px 0;box-sizing:border-box}.viewport.svelte-163pr1f{display:grid;width:300%;height:100%;grid-template-columns:33.333% 66.666%;transition:transform .3s;grid-auto-rows:100%}.offset-1.svelte-163pr1f{transform:translate(-33.333%, 0)}.offset-2.svelte-163pr1f{transform:translate(-66.666%, 0)}@media(min-width: 768px){.tutorial-outer.svelte-163pr1f{padding:0 }.viewport.svelte-163pr1f{width:100%;height:100%;display:grid;grid-template-columns:minmax(33.333%, var(--sidebar-large-w)) auto;grid-auto-rows:100%;transition:none}.offset-1.svelte-163pr1f,.offset-2.svelte-163pr1f{transform:none}}.tutorial-text.svelte-163pr1f{display:flex;flex-direction:column;height:100%;border-right:1px solid var(--second);background-color:var(--second);color:var(--sidebar-text)}.chapter-markup.svelte-163pr1f{padding:3.2rem 4rem;overflow:auto;flex:1;height:0}.chapter-markup.svelte-163pr1f h2{margin:4rem 0 1.6rem 0;font-size:var(--h3);line-height:1;font-weight:400;color:white}.chapter-markup.svelte-163pr1f h2:first-child{margin-top:.4rem}.chapter-markup.svelte-163pr1f a{color:var(--sidebar-text)}.chapter-markup.svelte-163pr1f a:hover{color:white}.chapter-markup.svelte-163pr1f ul{padding:0 0 0 2em}.chapter-markup.svelte-163pr1f blockquote{background-color:rgba(0,0,0,.17);color:var(--sidebar-text)}.chapter-markup.svelte-163pr1f::-webkit-scrollbar{background-color:var(--second);width:8px}.chapter-markup.svelte-163pr1f::-webkit-scrollbar-thumb{background-color:rgba(255,255,255,.7);border-radius:1em;outline:1px solid green}.chapter-markup.svelte-163pr1f p>code,.chapter-markup.svelte-163pr1f ul code{color:var(--sidebar-text);background:rgba(0,0,0,.12);padding:.2em .4em .3em;white-space:nowrap;position:relative;top:-0.1em}.controls.svelte-163pr1f{border-top:1px solid rgba(255,255,255,.15);padding:1em 0 0 0;display:flex}.show.svelte-163pr1f{background:var(--prime);padding:.3em .7em;border-radius:var(--border-r);top:.1em;position:relative;font-size:var(--h5);font-weight:300;color:rgba(255,255,255,0.7)}.show.svelte-163pr1f:hover{color:white}a.next.svelte-163pr1f{padding-right:1.2em;background:no-repeat 100% 50% url(/icons/arrow-right.svg);background-size:1em 1em;margin-left:auto}.improve-chapter.svelte-163pr1f{padding:1em 0 .5em 0}.improve-chapter.svelte-163pr1f a.svelte-163pr1f{padding:0 .1em;font-size:14px;text-decoration:none;opacity:.3;padding-left:1.2em;background:no-repeat 0 50% url(/icons/edit.svg);background-size:1em 1em}.improve-chapter.svelte-163pr1f a.svelte-163pr1f:hover{opacity:1}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */